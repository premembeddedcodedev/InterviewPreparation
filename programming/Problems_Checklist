
1. maximum-subarray
	1. Kadane's Algo
	2. bruteforce
	3. Path for example: CLogics/Logics/Arrays

2.Move Zeroes
	1. 2 pointer technique
	2. Path for example: ~/sambashare/Interview/CLogics/Logics/Arrays

3. Odd positions first and even positions last merging in linked list
	1. even pointer increment 2 times to reach even positions
	2. odd pointer increment 2 time to reach odd positions
	3. fitst odd positions need to increment because link will miss if we take even
	4. mege odd first and even linkedlist at the end of list;
	5. Path for example: DataStructures/LL

4. 19. Remove Nth Node From End of List
	1. 2 pointers will maintain
	2. fast pointer will move N positions and then move along with slow pointer 1 by 1
	3. when fast pointer moved to last slow pointer will reach to N-1th node
	4. skip and point the slow node to N+1 and delete N nod
	5. Path for example: DataStructures/LL

5. 2. Add Two Numbers
	1. join the 2 lls with addition and maintain carry
	2. Path for example: DataStructures/LL


6. 160. Intersection of Two Linked Lists
	1. take one pointer of each starting of the list
	2. traverse one step and one step till end
	3. whoever completes the first assign the pointer from another strating of the list
	4. first we will get any delta if we have.. equalising the offset similar to both lists
	5. iterate once again to find similar node address
	6. return address
	7. Path for example:DataStructures/LL
	9. input: 5, (42191), 3, (893), 4, 3 - display the intersect address

8. 560. Subarray Sum Equals K
	1. Approach - 1: generate all possible combinations and increment count when the value is equal to K O(N3)
	2. Approach - 2: Calculate pre-sum from 0th offset and keep it into array
			a. sum[i,j] = Leftsum[j] - leftsum[i-1] or if i=0, then sum[i,j] = Leftsum[j] - leftsum[i]
			b. use sum varianle instead of mantaining Leftsum array - complexity is O(N2) - Space complexity with out leftsum is O(N) otherwise with sum variable its O(1)
			c. to find sub array, its always should be like start <= end index -> this is the condition we have to use for traversing entire array
				i.TODO from below path 
			d. path: CLogics/LeetCode
			e. Reference :https://www.youtube.com/watch?v=HbbYPQc-Oo4 
9. Perfect subarray:
	Similar to sub array above (8). Negative numbers will not work - need to change the map to other data structure.
	Reference: https://www.youtube.com/watch?v=Lyay4WJwXyI

10. 1658.MinimumOperationstoReduceXtoZero.c
	- Need to resolve this problem yet
	- located CLogics/LeetCode

7. Group anagrams: In Progress
	1. hasmap
	2. Path for example: CLogics/Logics/Strings/LeetCode -- in progress
