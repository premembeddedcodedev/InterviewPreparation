/*
 * Given a string s, find the length of the longest substring
 without repeating characters.https://leetcode.com/problems/longest-substring-without-repeating-characters/description/

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.


Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.
*/

1st method:
	C SOlution with 2 pointers used with hash technique : hashing + 2pointer 
	optimise: /home/praveenv/sambashare/1.GitSrcInterview/CLogics/Leetcode/Strings/optimised/LC3_Longest_Substring_Without_Repeating_Characters.c
	non-optimised : /home/praveenv/sambashare/1.GitSrcInterview/CLogics/Leetcode/Strings/non-optimised/LC3_Longest_Substring_Without_Repeating_Characters_opt.c

2nd method:
	using maps in c++; /home/praveenv/sambashare/1.GitSrcInterview/CPP/LeethCode/hash_maps/pending -- need to write LC3_Longest_Substring_Without_Repeating_Characters.cpp
